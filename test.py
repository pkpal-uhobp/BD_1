#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import sys
import logging
from datetime import date
from db.Class_DB_refactored import DB

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('db/db_app.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)

def drop_and_recreate_schema(db):
    """–£–¥–∞–ª—è–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å—Ö–µ–º—É –∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é"""
    
    try:
        print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ö–µ–º—ã...")
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (—Å —É—á–µ—Ç–æ–º –≤–Ω–µ—à–Ω–∏—Ö –∫–ª—é—á–µ–π)
        tables_to_drop = ["Issued_Books", "Readers", "Books"]
        
        for table in tables_to_drop:
            try:
                from sqlalchemy import text
                with db.engine.begin() as conn:
                    conn.execute(text(f"DROP TABLE IF EXISTS \"{table}\" CASCADE"))
                print(f"  ‚úÖ –£–¥–∞–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ {table}")
            except Exception as e:
                print(f"  ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã {table}: {e}")
        
        # –£–¥–∞–ª—è–µ–º ENUM —Ç–∏–ø—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        try:
            from sqlalchemy import text
            with db.engine.begin() as conn:
                conn.execute(text("DROP TYPE IF EXISTS book_genre CASCADE"))
                conn.execute(text("DROP TYPE IF EXISTS discount_category CASCADE"))
                conn.execute(text("DROP TYPE IF EXISTS damage_type CASCADE"))
            print("  ‚úÖ –£–¥–∞–ª–µ–Ω—ã ENUM —Ç–∏–ø—ã")
        except Exception as e:
            print(f"  ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ ENUM —Ç–∏–ø–æ–≤: {e}")
        
        print("‚úÖ –°—Ö–µ–º–∞ —É–¥–∞–ª–µ–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ö–µ–º—ã: {e}")
        return False

def create_test_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏"""
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db = DB(
        host="localhost",
        port=5432,
        dbname="library_db",
        user="postgres",
        password="DhhkKLNM"
    )
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if not db.connect():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
        
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ")
        
        # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Å—Ö–µ–º—É
        print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π —Å—Ö–µ–º—ã...")
        if not drop_and_recreate_schema(db):
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é —Å—Ö–µ–º—É")
            return False
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ö–µ–º—É
        print("üìö –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        if not db.create_schema():
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ö–µ–º—É")
            return False
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É Books
        print("üìñ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Books...")
        books_data = [
            {
                "title": "–í–æ–π–Ω–∞ –∏ –º–∏—Ä",
                "authors": ["–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π"],
                "genre": "–†–æ–º–∞–Ω",
                "deposit_amount": 500.00,
                "daily_rental_rate": 50.00
            },
            {
                "title": "–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ",
                "authors": ["–§—ë–¥–æ—Ä –î–æ—Å—Ç–æ–µ–≤—Å–∫–∏–π"],
                "genre": "–†–æ–º–∞–Ω",
                "deposit_amount": 450.00,
                "daily_rental_rate": 45.00
            },
            {
                "title": "–ï–≤–≥–µ–Ω–∏–π –û–Ω–µ–≥–∏–Ω",
                "authors": ["–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü—É—à–∫–∏–Ω"],
                "genre": "–ü–æ—ç–∑–∏—è",
                "deposit_amount": 300.00,
                "daily_rental_rate": 30.00
            },
            {
                "title": "–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞",
                "authors": ["–ú–∏—Ö–∞–∏–ª –ë—É–ª–≥–∞–∫–æ–≤"],
                "genre": "–†–æ–º–∞–Ω",
                "deposit_amount": 550.00,
                "daily_rental_rate": 55.00
            },
            {
                "title": "–ê–Ω–Ω–∞ –ö–∞—Ä–µ–Ω–∏–Ω–∞",
                "authors": ["–õ–µ–≤ –¢–æ–ª—Å—Ç–æ–π"],
                "genre": "–†–æ–º–∞–Ω",
                "deposit_amount": 480.00,
                "daily_rental_rate": 48.00
            },
            {
                "title": "–û—Ç—Ü—ã –∏ –¥–µ—Ç–∏",
                "authors": ["–ò–≤–∞–Ω –¢—É—Ä–≥–µ–Ω–µ–≤"],
                "genre": "–†–æ–º–∞–Ω",
                "deposit_amount": 400.00,
                "daily_rental_rate": 40.00
            },
            {
                "title": "–ì–µ—Ä–æ–π –Ω–∞—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏",
                "authors": ["–ú–∏—Ö–∞–∏–ª –õ–µ—Ä–º–æ–Ω—Ç–æ–≤"],
                "genre": "–†–æ–º–∞–Ω",
                "deposit_amount": 350.00,
                "daily_rental_rate": 35.00
            },
            {
                "title": "–ú—ë—Ä—Ç–≤—ã–µ –¥—É—à–∏",
                "authors": ["–ù–∏–∫–æ–ª–∞–π –ì–æ–≥–æ–ª—å"],
                "genre": "–†–æ–º–∞–Ω",
                "deposit_amount": 420.00,
                "daily_rental_rate": 42.00
            },
            {
                "title": "–ö–∞–ø–∏—Ç–∞–Ω—Å–∫–∞—è –¥–æ—á–∫–∞",
                "authors": ["–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü—É—à–∫–∏–Ω"],
                "genre": "–ü–æ–≤–µ—Å—Ç—å",
                "deposit_amount": 280.00,
                "daily_rental_rate": 28.00
            },
            {
                "title": "–û–±–ª–æ–º–æ–≤",
                "authors": ["–ò–≤–∞–Ω –ì–æ–Ω—á–∞—Ä–æ–≤"],
                "genre": "–†–æ–º–∞–Ω",
                "deposit_amount": 380.00,
                "daily_rental_rate": 38.00
            }
        ]
        
        for book in books_data:
            result, error = db.insert_data("Books", book)
            if result:
                print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–∏–≥–∞: {book['title']}")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {book['title']} - {error}")
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É Readers
        print("\nüë• –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Readers...")
        readers_data = [
            {
                "last_name": "–ò–≤–∞–Ω–æ–≤",
                "first_name": "–ò–≤–∞–Ω",
                "middle_name": "–ò–≤–∞–Ω–æ–≤–∏—á",
                "address": "—É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 1, –∫–≤. 1",
                "phone": "+7-900-123-45-67",
                "discount_category": "–û–±—ã—á–Ω—ã–π",
                "discount_percent": 0
            },
            {
                "last_name": "–ü–µ—Ç—Ä–æ–≤",
                "first_name": "–ü—ë—Ç—Ä",
                "middle_name": "–ü–µ—Ç—Ä–æ–≤–∏—á",
                "address": "—É–ª. –ü—É—à–∫–∏–Ω–∞, –¥. 10, –∫–≤. 5",
                "phone": "+7-900-234-56-78",
                "discount_category": "–°—Ç—É–¥–µ–Ω—Ç",
                "discount_percent": 10
            },
            {
                "last_name": "–°–∏–¥–æ—Ä–æ–≤",
                "first_name": "–°–∏–¥–æ—Ä",
                "middle_name": "–°–∏–¥–æ—Ä–æ–≤–∏—á",
                "address": "—É–ª. –ì–∞–≥–∞—Ä–∏–Ω–∞, –¥. 25, –∫–≤. 12",
                "phone": "+7-900-345-67-89",
                "discount_category": "–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä",
                "discount_percent": 15
            },
            {
                "last_name": "–ö–æ–∑–ª–æ–≤–∞",
                "first_name": "–ê–Ω–Ω–∞",
                "middle_name": "–°–µ—Ä–≥–µ–µ–≤–Ω–∞",
                "address": "—É–ª. –ú–∏—Ä–∞, –¥. 5, –∫–≤. 3",
                "phone": "+7-900-456-78-90",
                "discount_category": "–ß–ª–µ–Ω_–∫–ª—É–±–∞",
                "discount_percent": 20
            },
            {
                "last_name": "–°–º–∏—Ä–Ω–æ–≤",
                "first_name": "–ê–ª–µ–∫—Å–µ–π",
                "middle_name": "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á",
                "address": "—É–ª. –°–æ–≤–µ—Ç—Å–∫–∞—è, –¥. 15, –∫–≤. 8",
                "phone": "+7-900-567-89-01",
                "discount_category": "–í–µ—Ç–µ—Ä–∞–Ω",
                "discount_percent": 25
            },
            {
                "last_name": "–ù–æ–≤–∏–∫–æ–≤–∞",
                "first_name": "–ï–ª–µ–Ω–∞",
                "middle_name": "–í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞",
                "address": "—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è, –¥. 30, –∫–≤. 15",
                "phone": "+7-900-678-90-12",
                "discount_category": "–°—Ç—É–¥–µ–Ω—Ç",
                "discount_percent": 10
            },
            {
                "last_name": "–ú–æ—Ä–æ–∑–æ–≤",
                "first_name": "–î–º–∏—Ç—Ä–∏–π",
                "middle_name": "–ò–≥–æ—Ä–µ–≤–∏—á",
                "address": "—É–ª. –°–∞–¥–æ–≤–∞—è, –¥. 8, –∫–≤. 4",
                "phone": "+7-900-789-01-23",
                "discount_category": "–û–±—ã—á–Ω—ã–π",
                "discount_percent": 0
            },
            {
                "last_name": "–í–æ–ª–∫–æ–≤–∞",
                "first_name": "–û–ª—å–≥–∞",
                "middle_name": "–ù–∏–∫–æ–ª–∞–µ–≤–Ω–∞",
                "address": "—É–ª. –ü–∞—Ä–∫–æ–≤–∞—è, –¥. 12, –∫–≤. 7",
                "phone": "+7-900-890-12-34",
                "discount_category": "–ü–µ–Ω—Å–∏–æ–Ω–µ—Ä",
                "discount_percent": 15
            }
        ]
        
        for reader in readers_data:
            result, error = db.insert_data("Readers", reader)
            if result:
                print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —á–∏—Ç–∞—Ç–µ–ª—å: {reader['last_name']} {reader['first_name']}")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {reader['last_name']} {reader['first_name']} - {error}")
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É Issued_Books
        print("\nüìö –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Issued_Books...")
        issued_books_data = [
            {
                "book_id": 1,
                "reader_id": 1,
                "issue_date": date(2024, 1, 15),
                "expected_return_date": date(2024, 2, 15),
                "actual_return_date": date(2024, 2, 10),
                "damage_type": "–ù–µ—Ç",
                "damage_fine": 0.00,
                "final_rental_cost": 50.00,
                "paid": True,
                "actual_rental_days": 26
            },
            {
                "book_id": 2,
                "reader_id": 2,
                "issue_date": date(2024, 1, 20),
                "expected_return_date": date(2024, 2, 20),
                "actual_return_date": None,
                "damage_type": "–ù–µ—Ç",
                "damage_fine": 0.00,
                "final_rental_cost": None,
                "paid": False,
                "actual_rental_days": None
            },
            {
                "book_id": 3,
                "reader_id": 3,
                "issue_date": date(2024, 1, 25),
                "expected_return_date": date(2024, 2, 25),
                "actual_return_date": date(2024, 2, 20),
                "damage_type": "–ü–æ—Ä–≤–∞–Ω–∞_–æ–±–ª–æ–∂–∫–∞",
                "damage_fine": 50.00,
                "final_rental_cost": 75.00,
                "paid": True,
                "actual_rental_days": 26
            },
            {
                "book_id": 4,
                "reader_id": 4,
                "issue_date": date(2024, 2, 1),
                "expected_return_date": date(2024, 3, 1),
                "actual_return_date": None,
                "damage_type": "–ù–µ—Ç",
                "damage_fine": 0.00,
                "final_rental_cost": None,
                "paid": False,
                "actual_rental_days": None
            },
            {
                "book_id": 5,
                "reader_id": 5,
                "issue_date": date(2024, 2, 5),
                "expected_return_date": date(2024, 3, 5),
                "actual_return_date": date(2024, 3, 1),
                "damage_type": "–ù–µ—Ç",
                "damage_fine": 0.00,
                "final_rental_cost": 40.00,
                "paid": True,
                "actual_rental_days": 25
            },
            {
                "book_id": 6,
                "reader_id": 6,
                "issue_date": date(2024, 2, 10),
                "expected_return_date": date(2024, 3, 10),
                "actual_return_date": date(2024, 3, 5),
                "damage_type": "–ó–∞–ø–∞—á–∫–∞–Ω–∞",
                "damage_fine": 30.00,
                "final_rental_cost": 55.00,
                "paid": True,
                "actual_rental_days": 24
            },
            {
                "book_id": 7,
                "reader_id": 7,
                "issue_date": date(2024, 2, 15),
                "expected_return_date": date(2024, 3, 15),
                "actual_return_date": None,
                "damage_type": "–ù–µ—Ç",
                "damage_fine": 0.00,
                "final_rental_cost": None,
                "paid": False,
                "actual_rental_days": None
            },
            {
                "book_id": 8,
                "reader_id": 8,
                "issue_date": date(2024, 2, 20),
                "expected_return_date": date(2024, 3, 20),
                "actual_return_date": date(2024, 3, 18),
                "damage_type": "–ù–µ—Ç",
                "damage_fine": 0.00,
                "final_rental_cost": 35.00,
                "paid": True,
                "actual_rental_days": 27
            }
        ]
        
        for issued_book in issued_books_data:
            result, error = db.insert_data("Issued_Books", issued_book)
            if result:
                print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –≤—ã–¥–∞—á–∞: –∫–Ω–∏–≥–∞ ID {issued_book['book_id']}, —á–∏—Ç–∞—Ç–µ–ª—å ID {issued_book['reader_id']}")
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—ã–¥–∞—á–∏: –∫–Ω–∏–≥–∞ ID {issued_book['book_id']} - {error}")
        
        print("\n‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
        print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        books_count = len(db.get_table_data("Books"))
        readers_count = len(db.get_table_data("Readers"))
        issued_count = len(db.get_table_data("Issued_Books"))
        
        print(f"  üìö –ö–Ω–∏–≥: {books_count}")
        print(f"  üë• –ß–∏—Ç–∞—Ç–µ–ª–µ–π: {readers_count}")
        print(f"  üìñ –í—ã–¥–∞—á: {issued_count}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {e}")
        logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏: {e}")
        return False
    
    finally:
        # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        db.disconnect()
        print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ")


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - —É–¥–∞–ª—è–µ—Ç —Å—Ö–µ–º—É, —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç –¥–∞–Ω–Ω—ã–º–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫–∏")
    print("=" * 50)
    print("üîÑ –ü–æ–ª–Ω–æ–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏...")
    
    # –°—Ä–∞–∑—É –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω–æ–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ
    create_test_data()
    
    print("\n‚úÖ –ì–æ—Ç–æ–≤–æ! –°—Ö–µ–º–∞ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∞ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.")

if __name__ == "__main__":
    main()