from db.Class_DB import DB

import sys

from PySide6.QtWidgets import QApplication, QMainWindow
from PySide6.QtGui import QStandardItemModel, QStandardItem

from ui.ui_main_rc import Ui_MainWindow

class MainWindow(QMainWindow):
    def __init__(self):
        super(MainWindow,self).__init__()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)

        self.db = DB()

        self.log_model = QStandardItemModel()
        self.ui.log_listView.setModel(self.log_model)

        # üëá –î–û–ë–ê–í–¨ –≠–¢–û ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ tabWidget
        self.tabWidget = self.ui.tabWidget  # ‚Üê –≠—Ç–æ –≤–∞–∂–Ω–æ!
        self.tabWidget.currentChanged.connect(self.on_tab_changed)

        self.connect_signals()

    def connect_signals(self):
        self.ui.connection_pushButton.clicked.connect(self.connect_to_db)
        self.ui.connection_pushButton_5.clicked.connect(self.create_schema)
        self.ui.connection_pushButton_4.clicked.connect(self.drop_schema)

        # üëá –ù–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
        self.ui.add_book_pushButton.clicked.connect(self.add_book)
        # self.ui.delete_book_pushButton.clicked.connect(self.delete_book)
        # self.ui.edit_book_pushButton.clicked.connect(self.edit_book)

        # –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è —á–∏—Ç–∞—Ç–µ–ª–µ–π –∏ –≤—ã–¥–∞—á
        # self.ui.add_reader_pushButton_2.clicked.connect(self.add_reader)
        # self.ui.delete_reader_pushButton.clicked.connect(self.delete_reader)
        # self.ui.edit_reader_pushButton.clicked.connect(self.edit_reader)
        #
        # self.ui.issue_book_pushButton.clicked.connect(self.issue_book)
        # self.ui.delete_issue_pushButton.clicked.connect(self.delete_issue)
        # self.ui.edit_issued_history_pushButton.clicked.connect(self.edit_issue)

    def connect_to_db(self):
        host = self.ui.host_lineEdit.text()
        port = self.ui.port_lineEdit.text()
        user = self.ui.user_lineEdit.text()
        password = self.ui.password_lineEdit.text()

        self.db.host = host
        self.db.port = int(port) if port else 5432
        self.db.user = user
        self.db.password = password

        if self.db.connect():
            self.add_log("–£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î")
        else:
            self.add_log("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î")

    def create_schema(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ö–µ–º—ã –ë–î"""
        if self.db.create_schema():
            self.add_log("–°—Ö–µ–º–∞ –ë–î —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞")
        else:
            self.add_log("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ö–µ–º—ã –ë–î")

    def drop_schema(self):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –ë–î"""
        if self.db.drop_schema():
            self.add_log("–°—Ö–µ–º–∞ –ë–î —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
        else:
            self.add_log("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã –ë–î")

    def add_log(self, message):
        """–î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥-–ª–∏—Å—Ç –∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ—Ç –≤–Ω–∏–∑"""
        item = QStandardItem(message)
        self.log_model.appendRow(item)

        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –≤–Ω–∏–∑ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        index = self.log_model.index(self.log_model.rowCount() - 1, 0)
        self.ui.log_listView.scrollTo(index)

    def on_tab_changed(self, index):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≤–∫–ª–∞–¥–æ–∫"""
        if index == 1:  # –í–∫–ª–∞–¥–∫–∞ "–ö–Ω–∏–≥–∏"
            self.load_books_data()
        elif index == 2:  # –í–∫–ª–∞–¥–∫–∞ "–ß–∏—Ç–∞—Ç–µ–ª–∏"
            self.load_readers_data()
        elif index == 3:  # –í–∫–ª–∞–¥–∫–∞ "–ò—Å—Ç–æ—Ä–∏—è"
            self.load_issued_books_data()

    def add_book(self):
        name = self.ui.book_name_lineEdit.text().strip()
        author = self.ui.book_author_lineEdit.text().strip()
        genre = self.ui.book_genre_lineEdit.text().strip()
        cost = self.ui.book_deposit_lineEdit.text().strip()
        daily_rate = self.ui.book_daily_rental_rate_lineEdit.text().strip()

        if not all([name, author, genre, cost, daily_rate]):
            self.add_log("‚ö†Ô∏è –í—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!")
            return

        try:
            cost = float(cost)
            daily_rate = float(daily_rate)
        except ValueError:
            self.add_log("‚ùå –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Ü–µ–Ω–∞ –≤ –¥–µ–Ω—å –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —á–∏—Å–ª–∞–º–∏!")
            return

        if self.db.insert_data("Books", {
           "title": name,
           "authors": [author],
           "genre": genre,
           "deposit_amount": cost,
           "daily_rental_rate": daily_rate
       }):
            self.add_log(f"‚úÖ –ö–Ω–∏–≥–∞ '{name}' –¥–æ–±–∞–≤–ª–µ–Ω–∞")
            self.load_books_data()  # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
            self.clear_book_inputs()  # –û—á–∏—â–∞–µ–º –ø–æ–ª—è
        else:
            self.add_log("‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏")

    def clear_book_inputs(self):
        self.ui.book_name_lineEdit.clear()
        self.ui.book_author_lineEdit.clear()
        self.ui.book_genre_lineEdit.clear()
        self.ui.book_deposit_lineEdit.clear()
        self.ui.book_daily_rental_rate_lineEdit.clear()

    def load_books_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –∫–Ω–∏–≥–∞—Ö –≤ —Ç–∞–±–ª–∏—Ü—É book_tableView"""
        books = self.db.get_table_data("Books")
        print(books)
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—É—é –º–æ–¥–µ–ª—å
        model = QStandardItemModel()
        model.setHorizontalHeaderLabels(["ID", "–ù–∞–∑–≤–∞–Ω–∏–µ", "–ê–≤—Ç–æ—Ä", "–ñ–∞–Ω—Ä", "–°—Ç–æ–∏–º–æ—Å—Ç—å", "–¶–µ–Ω–∞ –≤ –¥–µ–Ω—å"])

        for book in books:
            row = []
            for field in book.keys():  # book ‚Äî –∫–æ—Ä—Ç–µ–∂ –∏–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π
                item = QStandardItem(str(book[field]))
                item.setEditable(False)  # –¢–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                row.append(item)
            model.appendRow(row)

        self.ui.book_tableView.setModel(model)
        self.ui.book_tableView.resizeColumnsToContents()

    def load_readers_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —á–∏—Ç–∞—Ç–µ–ª—è—Ö –≤ —Ç–∞–±–ª–∏—Ü—É"""
        readers = self.db.get_table_data("Readers")
        # –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã

    def load_issued_books_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –≤—ã–¥–∞–Ω–Ω—ã—Ö –∫–Ω–∏–≥–∞—Ö"""
        issued_books = self.db.get_table_data("Issued_Books")

if __name__ == '__main__':
    app = QApplication(sys.argv)
    window = MainWindow()
    window.show()
    sys.exit(app.exec_())
