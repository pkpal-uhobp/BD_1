Метод disconnect() класса DB

Назначение:
Закрывает соединение с базой данных, освобождает ресурсы SQLAlchemy и сбрасывает внутренние структуры данных.

Параметры:
Метод не принимает параметров.

Возвращаемое значение:
Метод не возвращает значения (None).

Выполняемые действия:

1. Проверка наличия активного соединения:
   - Если self.engine равен None, выводит сообщение что соединение уже закрыто
   - Если engine существует, proceed с закрытием

2. Закрытие соединения:
   - Вызывает self.engine.dispose() для корректного закрытия всех пулов соединений
   - Освобождает ресурсы, связанные с engine

3. Сброс внутренних структур:
   - self.engine = None (удаление ссылки на engine)
   - self.metadata = None (удаление метаданных)
   - self.tables = {} (очистка словаря таблиц)

4. Логирование:
   - INFO: "Соединение с БД закрыто" (при успешном закрытии)
   - INFO: "Соединение уже закрыто или не было установлено" (если соединения не было)
   - ERROR: сообщение об ошибке с деталями (при возникновении исключения)

Примеры вызова:

1. Базовое использование:
   db = DB()
   if db.connect():
       # Работа с БД...
       db.disconnect()  # Закрытие соединения

2. С обработкой ошибок:
   db = DB()
   try:
       if db.connect():
           # Работа с БД...
           db.disconnect()
   except Exception as e:
       print(f"Ошибка при закрытии соединения: {e}")

3. Повторный вызов:
   db = DB()
   db.connect()
   db.disconnect()  # Первый вызов - закрывает соединение
   db.disconnect()  # Второй вызов - информирует что соединение уже закрыто

Побочные эффекты:
- Освобождение ресурсов базы данных
- Закрытие всех активных соединений в пуле
- Сброс внутреннего состояния объекта DB
- Запись в лог-файл информации о закрытии соединения

Особенности:
- Метод безопасен для повторного вызова
- Не генерирует исключений при отсутствии соединения
- Автоматически вызывается при корректном завершении работы с БД
- Освобождает все ресурсы, связанные с SQLAlchemy engine

Логирование:
- INFO: "Соединение с БД закрыто" (при успешном закрытии)
- INFO: "Соединение уже закрыто или не было установлено" (при повторном вызове)
- ERROR: "Ошибка при закрытии соединения: {сообщение ошибки}" (при исключениях)

Рекомендации по использованию:
- Всегда вызывайте disconnect() после завершения работы с БД
- Особенно важно при длительных сессиях работы
- Можно использовать в блоке finally для гарантии закрытия
- Рекомендуется для освобождения ресурсов в долгоживущих приложениях